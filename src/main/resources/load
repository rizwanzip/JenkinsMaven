package com.centegy;

import org.springframework.boot.Banner;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.boot.web.servlet.ServletComponentScan;
import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;
import org.springframework.web.WebApplicationInitializer;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;

@ServletComponentScan
@SpringBootApplication
public class Application extends SpringBootServletInitializer implements WebApplicationInitializer {
    @Override
    protected SpringApplicationBuilder configure(SpringApplicationBuilder builder) {
        return builder.sources (Application.class);
    }

    public static void main(String[] args) {
        configureApplication(new SpringApplicationBuilder()).run(args);
    }

    private static SpringApplicationBuilder configureApplication(SpringApplicationBuilder builder) {
        return builder.sources(Application.class).bannerMode(Banner.Mode.OFF);
    }

    @Override
    public void onStartup(ServletContext servletContext) throws ServletException {
        servletContext.getSessionCookieConfig().setName("CSESSIONID");
        super.onStartup(servletContext);
    }
}
-------
package com.centegy;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Component;

@Component
public class PropertyHelper {
    public static String loginUrl;
    @Autowired
    private Environment environment;
    @Autowired
    public void setSomeThing(@Value("${application.login.url:#{null}}")  String loginUrl){
        String[] activeProfiles = this.environment.getActiveProfiles();
        Boolean isSsoEnabled = false;
        for (String profile : activeProfiles) {
            if (profile.equals("sso")) {
                isSsoEnabled = true;
            }
        }
        if(isSsoEnabled) {
            PropertyHelper.loginUrl = loginUrl;
        }
        else {
            PropertyHelper.loginUrl = null;
        }
    }
}
